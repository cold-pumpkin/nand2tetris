// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 *
 *
 *    sel[0]  sel[1]  sel[2]   |    w1   w2   w3   w4  |  x1   x2  |  out   
 *      0       0       0      |    a    c    e    g   |  a    e   |   a  
 *      0       0       1      |    a    c    e    g   |  a    e   |   e  
 *      0       1       0      |    a    c    e    g   |  c    g   |   c  
 *      0       1       1      |    a    c    e    g   |  c    g   |   g
 *      1       0       0      |    b    d    f    h   |  b    f   |   b
 *      1       0       1      |    b    d    f    h   |  b    f   |   f
 *      1       1       0      |    b    d    f    h   |  d    h   |   d
 *      1       1       1      |    b    d    f    h   |  d    h   |   h
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
        Mux16(a=a, b=b, sel=sel[0], out=w1);
        Mux16(a=c, b=d, sel=sel[0], out=w2);
        Mux16(a=e, b=f, sel=sel[0], out=w3);
        Mux16(a=g, b=h, sel=sel[0], out=w4);

        Mux16(a=w1, b=w2, sel=sel[1], out=x1);
        Mux16(a=w3, b=w4, sel=sel[1], out=x2);

        Mux16(a=x1, b=x2, sel=sel[2], out=out);
}